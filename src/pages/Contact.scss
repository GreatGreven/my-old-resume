.ERROR {
    background-color: orangered;    
}

.OK {
    background-color: yellowgreen;
}

#contact {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    
    > * {
        margin-bottom: 1rem;
    }
    
    h1 {
        text-align: center;
    }

    fieldset{
        width: min-content;
	border-radius: 1.5rem;
	legend {
	    text-align: center;
	}
        form {
	    width: 70vw;
	    display: flex;
	    flex-direction: column;
	    align-items: center;
	    .field {
		z-index: 0;
		width: 100%;
   		position: relative;
    		border-bottom: 2px dashed var(--text-secondary);
    		margin: 1.5rem auto;
    		transition: 500ms;
  	    }
  	    .label {
		display: block;
    		color:var(--text-secondary);
    		font-size: 1.2rem;
  	    }
  	    .input {
    		outline: none;
    		border: none;
    		overflow: hidden;
    		margin: 0;
    		width: 100%;
    		padding: 0.25rem 0;
    		background: transparent;
    		color: white;
    		font-size: 1.2em;
    		font-weight: bold;
    		transition: border 500ms;
  	    }
  	    .input:invalid {
    		color: orangered;
  	    }
  	/* Border animation */
  	    .field::after {
    		content: "";
    		position: relative;
    		display: block;
    		height: 4px;
    		width: 100%;
    		background: var(--accent-primary);
    		transform: scaleX(0);
    		transform-origin: 0%;
    		opacity: 0;
    		transition: all 500ms ease;
    		top: 2px;
  	    }
  	    .field:focus-within {
    		border-color: transparent;
  	    }
  	    .field:focus-within::after {
    		transform: scaleX(1);
    		opacity: 1;
  	    }
  	/* Label animation */
  	    .label {
		z-index:-1;
    		position: absolute;
		top:0.25rem;
    		transform-origin: 0%;
    		transition: transform 400ms;
  	    }
  	    .field:focus-within .label,
	    .input:not(:placeholder-shown) + .label{
    		transform: scale(0.8) translateY(-2rem);
    		opacity: 1;
    	    }
	    .send{}
	    .button {
		margin: 1.5rem auto;
		padding: 0.5rem 2rem;
		color: var(--accent-primary);
		border: 2px solid var(--accent-primary);
		background: var(--bg-main);
		border-radius:0.5rem;
		&:hover{
		    color: var(--bg-main);
		    background: var(--accent-primary);
		}
		&:disabled{
		    filter:grayscale(100%);
	    	}
	    }
        }
    }

    .media-links {
		width: 60%;
        display: flex;
		justify-content: space-evenly;
			
		a {
			display: grid;
			place-items: center;
			background-color: var(--bg-secondary);
			border-radius: 50%;
			box-shadow: 0 5px 4px rgba(0,0,0,.5);
			transition: 400ms ease-in-out;
			
			&:hover{
					transform: translateY(-0.5rem);

					> * {
						filter: grayscale(0)
					}

					#github {
						color: #5e045f;
					}

					
			}

			#github{
				color: gray
			}
			
			svg {
				box-sizing: border-box;
				margin: 1rem;
				width: 3rem;
				height: 3rem;
				transition: 400ms ease-in-out;
				filter: grayscale(100%);
				
				
			}
		}

		
    }
}

#facebook {
	color: #4267B2;
}


#instagram {
    color: #e4405f;
}

// #github {
//     color: rgb(48, 4, 49);
// }

#linkedin {
    color: #2867B2;
}


/* Small screens */
@media only screen and (max-width: 599px) {    
}
  
/* Large screens */
@media only screen and (min-width: 600px) {
}
